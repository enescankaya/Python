import json
import os

class Task:
    def __init__(self, description, completed=False):
        self.description = description
        self.completed = completed

    def toggle_completion(self):
        self.completed = not self.completed

class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self, description):
        self.tasks.append(Task(description))

    def complete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].toggle_completion()
        else:
            print("Invalid task index.")

    def view_tasks(self):
        if self.tasks:
            for i, task in enumerate(self.tasks):
                status = "Done" if task.completed else "Pending"
                print(f"{i+1}. {task.description} - {status}")
        else:
            print("No tasks available.")

    def save_tasks(self, filename):
        with open(filename, "w") as file:
            json.dump([{"description": task.description, "completed": task.completed} for task in self.tasks], file)

    def load_tasks(self, filename):
        if os.path.exists(filename):
            with open(filename, "r") as file:
                data = json.load(file)
                self.tasks = [Task(task["description"], task["completed"]) for task in data]
        else:
            print("File not found.")

def main():
    task_manager = TaskManager()
    filename = "tasks.json"

    if os.path.exists(filename):
        task_manager.load_tasks(filename)
    
    while True:
        print("\nTask Manager")
        print("1. Add Task")
        print("2. Complete Task")
        print("3. View Tasks")
        print("4. Save Tasks")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            description = input("Enter task description: ")
            task_manager.add_task(description)
        elif choice == "2":
            task_manager.view_tasks()
            index = int(input("Enter task index to mark as complete: ")) - 1
            task_manager.complete_task(index)
        elif choice == "3":
            task_manager.view_tasks()
        elif choice == "4":
            task_manager.save_tasks(filename)
            print("Tasks saved successfully.")
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
